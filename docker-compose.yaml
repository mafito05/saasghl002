# docker-compose.yml (Versi√≥n Oficial y Completa)
services:
  saas_backend:
    build: . # Construye la imagen usando el Dockerfile en esta carpeta
    container_name: saas_backend
    restart: always
    ports:
      - "8000:8000" # Expone el puerto 8000 de tu API al exterior
    volumes:
      # Permite a este contenedor comunicarse con el servicio de Docker del servidor
      - /var/run/docker.sock:/var/run/docker.sock 
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - evolution_network

  postgres:
    image: postgres:14
    container_name: evolution_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      # Mapeamos al puerto 5434 para evitar conflictos con tus instalaciones locales
      - "5434:5432"
    volumes:
      - evolution_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - evolution_network

  redis:
    image: redis:7
    container_name: evolution_redis
    restart: always
    volumes:
      - evolution_redis_data:/data
    networks:
      - evolution_network

volumes:
  evolution_instances:
  evolution_postgres_data:
  evolution_redis_data:

networks:
  evolution_network:
    driver: bridge