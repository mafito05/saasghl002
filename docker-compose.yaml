version: '3.8'

services:
  saas_backend:
    build: .
    container_name: saas_backend
    restart: always
    ports:
      - "8000:8000"
    volumes:
      # Montamos el socket de Docker para que la app pueda crear otros contenedores
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    # Permite que el contenedor se comunique con el host (necesario para el QR)
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - my_saas_network

  postgres:
    image: postgres:14
    container_name: saas_postgres # Nombre más genérico
    restart: always
    environment:
      # Credenciales definidas directamente aquí.
      # Coinciden con la DATABASE_URL en el archivo .env
      POSTGRES_DB: saas_db
      POSTGRES_USER: saas_user
      POSTGRES_PASSWORD: saas_password
    ports:
      # Mapeamos el puerto 5432 de la BD a 5434 en tu máquina
      - "5434:5432"
    volumes:
      - saas_postgres_data:/var/lib/postgresql/data # Nombre de volumen más genérico
    healthcheck:
      # La comprobación de salud ahora usa las credenciales correctas
      test: ["CMD-SHELL", "pg_isready -U saas_user -d saas_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_saas_network

  # Redis ya no es necesario para la nueva API de WAHA, lo hemos quitado.

volumes:
  saas_postgres_data: # Nombre de volumen más genérico

networks:
  my_saas_network:
    name: my_saas_network
    driver: bridge
